{"version":3,"file":"static/js/9258.b20c6c7d.chunk.js","mappings":"2HAYAA,EAAAA,EAAMC,SAASC,QAAQC,OAAO,wBAC5BC,aAAaC,QAAQ,iBACvBL,EAAAA,EAAMM,aAAaC,QAAQC,KAAIC,UAC7BC,EAAIR,QAAQ,8BAAgCE,aAAaC,QAAQ,iBACjEK,EAAIR,QAAQ,4BAA8BE,aAAaC,QAAQ,oBACxDK,KAGTV,EAAAA,EAAMM,aAAaK,SAASH,IAAI,MAlBTI,IAEnBA,EAAMD,UACNC,EAAMD,SAASE,QAAU,KACzBD,EAAMD,SAASE,OAIjB,OAAOC,QAAQC,OAAOH,EAAM,IAY9B,SACEI,IAAKhB,EAAAA,EAAMgB,IACXC,KAAMjB,EAAAA,EAAMiB,KACZC,IAAKlB,EAAAA,EAAMkB,IACXC,OAAQnB,EAAAA,EAAMmB,O,gKCrBTV,eAAeW,EAAWC,GAC/B,IACE,MAAM,KAAEC,EAAI,QAAEpB,SAAkBqB,EAAAA,EAAiBN,KAAK,GAADO,OAChDC,kEAAiC,sBACpCJ,GAIiB,IAADK,EAAAC,EAAAC,EAAAC,EAAlB,GAAS,OAAJP,QAAI,IAAJA,IAAAA,EAAMV,MAST,OARAR,aAAa0B,QAAQ,gBAAqB,OAAJR,QAAI,IAAJA,GAAa,QAATI,EAAJJ,EAAMS,eAAO,IAAAL,GAAU,QAAVC,EAAbD,EAAeM,gBAAQ,IAAAL,OAAnB,EAAJA,EAAyBM,WACzD7B,aAAa8B,WAAW,uBACxB9B,aAAa0B,QACjB,gBACA5B,EAAQ,+BAEJE,aAAa0B,QAAQ,UAAe,OAAJR,QAAI,IAAJA,GAAa,QAATM,EAAJN,EAAMS,eAAO,IAAAH,GAAU,QAAVC,EAAbD,EAAeI,gBAAQ,IAAAH,OAAnB,EAAJA,EAAyBI,KAExD,CAAEX,QACJa,EAAAA,GAAMvB,MAAMU,EAAKc,QAC1B,CAAE,MAAOxB,GAEP,OADIA,EAAMD,UAAUwB,EAAAA,GAAMvB,MAAMA,EAAMD,SAASW,KAAKc,SAC7C,CAAExB,QACX,CACF,CAEOH,eAAe4B,EAAehB,GACnC,IACE,MAAM,KAAEC,SAAeC,EAAAA,EAAiBL,IAAI,GAADM,OACtCC,kEAAiC,+BACpCJ,GAQF,GANAiB,QAAQC,IAAIjB,GAEPA,EAAKV,MAEHuB,EAAAA,GAAMvB,MAAMU,EAAKc,eADhBhC,aAAa8B,WAAW,gBAG3BZ,EAAKV,MAAO,MAAO,CAAEU,OAC5B,CAAE,MAAOV,GAEP,OADIA,EAAMD,UAAUwB,EAAAA,GAAMvB,MAAMA,EAAMD,SAASW,KAAKc,SAC7C,CAAExB,QACX,CACF,CACOH,eAAe+B,EAAUnB,GAC9B,IACE,MAAM,KAAEC,SAAeC,EAAAA,EAAiBL,IAAI,GAADM,OACtCC,kEAAiC,0BACpCJ,GAOF,GALAiB,QAAQC,IAAIjB,GACPA,EAAKV,MAEHuB,EAAAA,GAAMvB,MAAMU,EAAKc,SADtBD,EAAAA,GAAMM,QAAQnB,EAAKc,UAGhBd,EAAKV,MAAO,MAAO,CAAEU,OAC5B,CAAE,MAAOV,GAEP,OADIA,EAAMD,UAAUwB,EAAAA,GAAMvB,MAAMA,EAAMD,SAASW,KAAKc,SAC7C,CAAExB,QACX,CACF,CACOH,eAAeiC,EAAkBrB,GACtC,IACE,MAAM,KAAEC,SAAeC,EAAAA,EAAiBL,IAAI,GAADM,OACtCC,kEAAiC,+BACpCJ,GAOF,GALAiB,QAAQC,IAAIjB,GACPA,EAAKV,MAEHuB,EAAAA,GAAMvB,MAAMU,EAAKc,SADtBD,EAAAA,GAAMM,QAAQnB,EAAKc,UAGhBd,EAAKV,MAAO,MAAO,CAAEU,OAC5B,CAAE,MAAOV,GAEP,OADIA,EAAMD,UAAUwB,EAAAA,GAAMvB,MAAMA,EAAMD,SAASW,KAAKc,SAC7C,CAAExB,QACX,CACF,CAkIOH,eAAekC,EAAYtB,GAChC,IACE,MAAM,KAAEC,SAAeC,EAAAA,EAAiBN,KAAK,GAADO,OACvCC,kEAAiC,yBACpCJ,GAGF,OAAS,OAAJC,QAAI,IAAJA,GAAAA,EAAMV,OAGTgC,IAAAA,KAAU,CACRT,OAAO,EACPU,KAAM,QACNC,SAAU,UACVC,MAAW,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAMc,QACbY,mBAAmB,EACnBC,kBAAkB,EAClBC,MAAO,MAGJ,CAAE5B,SAZA,CAAEA,OAab,CAAE,MAAOV,GAWP,OAVIA,EAAMD,UACRiC,IAAAA,KAAU,CACRT,OAAO,EACPU,KAAM,QACNC,SAAU,UACVC,MAAOnC,EAAMD,SAASW,KAAKc,QAC3BY,mBAAmB,EACnBC,kBAAkB,EAClBC,MAAO,MAEJ,CAAEtC,QACX,CACF,CAEOH,eAAe0C,EAAe9B,GACnC,IACE,MAAM,KAAEC,EAAI,QAAEpB,SAAkBkD,EAAAA,EAAqBnC,KAAK,GAADO,OACpDC,kEAAiC,oBAEpCJ,GAIF,OADAiB,QAAQC,IAAI,aAAcjB,GACrBA,EAAKV,OAQHuB,EAAAA,GAAMvB,MAAMU,EAAKc,SAEjB,CAAEd,gBATDlB,aAAa8B,WAAW,0BACxB9B,aAAa0B,QACjB,mBACA5B,EAAQ,uBAGH,CAAEoB,QAIb,CAAE,MAAOV,GAEP,OADIA,EAAMD,UAAUwB,EAAAA,GAAMvB,MAAMA,EAAMD,SAASW,KAAKc,SAC7C,CAAExB,QACX,CACF,CAEOH,eAAe4C,EAAmBhC,GACvC,IACE,MAAM,KAAEC,SAAe8B,EAAAA,EAAqBnC,KAAK,GAADO,OAC3CC,kEAAiC,6BACpCJ,GAQF,GANAiB,QAAQC,IAAIjB,GAEPA,EAAKV,MAEHuB,EAAAA,GAAMvB,MAAMU,EAAKc,eADhBhC,aAAa8B,WAAW,qBAG3BZ,EAAKV,MAAO,MAAO,CAAEU,OAC5B,CAAE,MAAOV,GAEP,OADIA,EAAMD,UAAUwB,EAAAA,GAAMvB,MAAMA,EAAMD,SAASW,KAAKc,SAC7C,CAAExB,QACX,CACF,CACOH,eAAe6C,EAAcjC,GAClC,IACE,MAAM,KAAEC,SAAe8B,EAAAA,EAAqBnC,KAAK,GAADO,OAC3CC,kEAAiC,wBACpCJ,GAMF,GAJAiB,QAAQC,IAAIjB,GACPA,EAAKV,OACHuB,EAAAA,GAAMvB,MAAMU,EAAKc,UAEnBd,EAAKV,MAAO,MAAO,CAAEU,OAC5B,CAAE,MAAOV,GAEP,OADIA,EAAMD,UAAUwB,EAAAA,GAAMvB,MAAMA,EAAMD,SAASW,KAAKc,SAC7C,CAAExB,QACX,CACF,CACOH,eAAe8C,EAAsBlC,GAC1C,IACE,MAAM,KAAEC,SAAe8B,EAAAA,EAAqBnC,KAAK,GAADO,OAC3CC,kEAAiC,6BACpCJ,GAMF,GAJAiB,QAAQC,IAAIjB,GACPA,EAAKV,OACHuB,EAAAA,GAAMvB,MAAMU,EAAKc,UAEnBd,EAAKV,MAAO,MAAO,CAAEU,OAC5B,CAAE,MAAOV,GAEP,OADIA,EAAMD,UAAUwB,EAAAA,GAAMvB,MAAMA,EAAMD,SAASW,KAAKc,SAC7C,CAAExB,QACX,CACF,C,gDCtTAZ,EAAAA,EAAMC,SAASC,QAAQC,OAAO,sBAC5BC,aAAaC,QAAQ,oBACvBL,EAAAA,EAAMM,aAAaC,QAAQC,KAAIC,UAC7BC,EAAIR,QAAQ,4BAA8BE,aAAaC,QACrD,oBAEKK,KAGTV,EAAAA,EAAMM,aAAaK,SAASH,IAAI,MAnBTI,IAEnBA,EAAMD,UACNC,EAAMD,SAASE,QAAU,KACzBD,EAAMD,SAASE,OAIjB,OAAOC,QAAQC,OAAOH,EAAM,IAa9B,SACEI,IAAKhB,EAAAA,EAAMgB,IACXC,KAAMjB,EAAAA,EAAMiB,KACZC,IAAKlB,EAAAA,EAAMkB,IACXC,OAAQnB,EAAAA,EAAMmB,O,4ICdhB,MA4SA,EA5SuBqC,KACrB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,cACtCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAKC,IAAUJ,EAAAA,EAAAA,UAAS,KACxBK,EAASC,IAAcN,EAAAA,EAAAA,UAAS,IAChCO,EAAQC,IAAaR,EAAAA,EAAAA,WAAS,GAE/BS,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACRN,EAAU,GAAKO,YAAW,IAAMN,EAAWD,EAAU,IAAI,IAAK,GAC7D,CAACA,IAEJ,MAAMQ,EAAgB/D,UACpBgE,EAAEC,iBACFP,GAAU,GACV,IACE,IAAI,KAAE7C,SAAee,EAAAA,EAAAA,IAAe,CAAEuB,UACtCtB,QAAQC,IAAIjB,IACRA,GAAa,OAAJA,QAAI,IAAJA,GAAAA,EAAMV,QACjBuD,GAAU,GACVhC,EAAAA,GAAMM,QAAQ,yBACdiB,EAAc,WAElB,CAAE,MAAO9C,GACP0B,QAAQC,IAAI3B,EACd,CAAC,QACCuD,GAAU,EACZ,GAwCF,OACEQ,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,OACEG,UAAU,eACVC,GAAG,eACH,cAAY,WACZ,mBAAiB,OACjB,wBAAsB,QACtB,uBAAqB,QAAOF,UAE5BF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,GAAED,UACfF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,GAAED,UACfF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBD,UAC9BG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaD,SAAA,EAU1BF,EAAAA,EAAAA,KAAA,OAAKM,IAAI,kCAAkCC,IAAI,KAC/B,cAAfzB,GACCuB,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,GAAED,SAAA,EACfF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,mDAAkDD,SAAC,aAGjEF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,kBAAiBD,SAAC,4DAIjCG,EAAAA,EAAAA,MAAA,QAAAH,SAAA,EACEG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4BAA2BD,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OACEG,UACGlB,EAEG,cADA,0BAELiB,UAEDF,EAAAA,EAAAA,KAACQ,EAAAA,EAAe,CAACtC,KAAMuC,EAAAA,SAEzBT,EAAAA,EAAAA,KAAA,SACEU,QAAQ,qBACRP,UAAU,aAAYD,SACvB,mBAGDF,EAAAA,EAAAA,KAAA,SACEW,KAAK,QACLC,YAAY,2BACZT,UAAU,qBACVU,UAAQ,EACRC,MAAO7B,EACP8B,SAAWjB,GAAMZ,EAASY,EAAEkB,OAAOF,aAGvCd,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLC,QAAS3B,EACT4B,WAAW,UACXhB,UAAU,2BACVQ,KAAK,SACLS,QAAUtB,GAAMD,EAAcC,GAC9BuB,UAAWpC,EAAMiB,SAClB,kBAMLG,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAC,SAAA,EACEG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,GAAED,SAAA,EACfF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,mDAAkDD,SAAC,sBAGjEG,EAAAA,EAAAA,MAAA,KAAGF,UAAU,kBAAiBD,SAAA,CAAC,0BACLjB,EAAMqC,UAAU,EAAG,GAC1C,IAAIC,OAAOtC,EAAMuC,OAAS,GAC1BvC,EAAMwC,OAAO,UAGlBpB,EAAAA,EAAAA,MAAA,QAAMqB,SAAW5B,GA3HfhE,WAItB,GAHAgE,EAAEC,iBACFP,GAAU,GAENL,EAAIqC,OAAS,EAYf,OAXAhE,EAAAA,GAAMvB,MAAM,uBAAwB,CAClCkC,SAAU,YACVwD,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,UAET1C,GAAU,IACH,EAET,IACE,IAAI,KAAE7C,SAAekB,EAAAA,EAAAA,IAAU,CAAEoB,QAAOE,SACpCxC,GAAa,OAAJA,QAAI,IAAJA,GAAAA,EAAMV,QACjBuD,GAAU,GAEVC,EAAS,mBAAoB,CAAE0C,MAAO,CAAElD,WAE5C,CAAE,MAAOhD,GACP0B,QAAQC,IAAI3B,EACd,CAAC,QACCuD,GAAU,EACZ,GA8F2C4C,CAAgBtC,GAAGI,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gBAAeD,UAC5BF,EAAAA,EAAAA,KAACqC,EAAAA,EAAQ,CACPC,UAAU,MACVxB,MAAO3B,EACP4B,SAAU3B,EACVmD,UAAW,EACXC,cAAe,gBACfC,iBACEzC,EAAAA,EAAAA,KAAA,QAAAE,SAAM,qBAERwC,YAAU,EACVC,WAAW,mBACXC,eAAe,aACfC,YAAcC,IAAU9C,EAAAA,EAAAA,KAAA,YAAW8C,SAGvC9C,EAAAA,EAAAA,KAACiB,EAAAA,EAAM,CACLC,QAAS3B,EACT4B,WAAW,UACXhB,UAAU,2BACVQ,KAAK,SACLU,SAAyB,IAAflC,EAAIqC,OAAatB,SAC5B,mBASHG,EAAAA,EAAAA,MAAA,KAAAH,SAAA,CAAG,gCACwB,IACxBb,GACCgB,EAAAA,EAAAA,MAAA,QAAMF,UAAU,YAAWD,SAAA,CAAC,mBACTb,MAGnBW,EAAAA,EAAAA,KAAA,QACEG,UAAU,4BACVC,GAAG,YACHgB,QAAUtB,GArIpBhE,WAChB+D,EAAcC,GACdR,EAAW,IACXQ,EAAEC,gBAAgB,EAkIwBgD,CAAUjD,GAC1BkD,MAAO,CAAEC,OAAQ,WAAY/C,UAE7BF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0CAiG1B,C,gDChQDgD,EAAgB,SAACC,GAAiB,MAAe,kBAARA,GAA4B,OAARA,CAAY,EAEzEC,EAAW,SAACC,G,IAChBC,EAAUD,EAAAvC,MAAVA,OAAK,IAAAwC,EAAG,GAAEA,EACVC,EAAaF,EAAAd,UAAbA,OAAS,IAAAgB,EAAG,EAACA,EACbxC,EAAQsC,EAAAtC,SACRyC,EAAOH,EAAAG,QACPX,EAAWQ,EAAAR,YACXY,EAAuBJ,EAAAK,gBAAvBA,OAAe,IAAAD,GAAQA,EACvBE,EAAkBN,EAAAf,UAAlBA,OAAS,IAAAqB,EAAG,OAAMA,EAClBlB,EAAeY,EAAAZ,gBACf7B,EAAWyC,EAAAzC,YACXgC,EAAcS,EAAAT,eACdD,EAAUU,EAAAV,WACViB,EAAAP,EAAAQ,kBAAAA,OAAoB,IAAAD,GAAKA,EAEnBE,EAAgCC,EAAAA,SAAe,GAA9CC,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC5BI,EAAYH,EAAAA,OAA6C,IAEzDI,EAAc,WAAM,OAACrD,EAAQA,EAAMsD,WAAWC,MAAM,IAAM,EAAtC,EAEpB3B,EAA2B,WAAdJ,GAAwC,QAAdA,EAE7CyB,EAAAA,WAAgB,WACdG,EAAUI,QAAUJ,EAAUI,QAAQ7C,MAAM,EAAGc,EACjD,GAAG,CAACA,IAEJwB,EAAAA,WAAgB,W,MACVL,IACkB,QAApBL,EAAAa,EAAUI,QAAQ,UAAE,IAAAjB,GAAAA,EAAEkB,QAE1B,GAAG,CAACb,IAEJ,IAAMc,EAAsB,WAC1B,GAA2B,kBAAhB5D,EAA0B,CACnC,GAAIA,EAAYY,SAAWe,EACzB,OAAO3B,EAGLA,EAAYY,OAAS,GACvB7D,QAAQ1B,MAAM,qEAEjB,CAEH,EAEMwI,EAAoB,SAAC3D,GAEzB,OADoB4B,GAAcgC,MAAMC,OAAO7D,IAA2B,kBAAVA,IAClB,IAAxBA,EAAM8D,OAAOpD,MACrC,EAEMqD,EAAe,SAACC,GACZ,IAAAhE,EAAUgE,EAAM9D,OAAMF,MAE1B2D,EAAkB3D,KACpBiE,EAAkBjE,GAClBkE,EAAWhB,EAAc,GAE7B,EAEMiB,EAAoB,SAACH,GACjB,IAAAI,EAAgBJ,EAAKI,YACvBpE,EAAQgE,EAAM9D,OAAOF,MAE3B,IAAK2D,EAAkB3D,GAAQ,CAI7B,GAAIA,EAAMU,SAAWe,EACKzB,EAAMuD,MAAM,IAAIc,MAAK,SAACC,GAAc,OAACX,EAAkBW,EAAU,MAEvFC,EAAgBvE,EAAMuD,MAAM,KAC5BW,EAAWzC,EAAY,IAOF,OAArB2C,EAAYvI,MAA2C,0BAA1BuI,EAAY5C,YAC3CwC,EAAM/E,iBACNgF,EAAkB,IAClBC,EAAWhB,EAAc,IAK3Bc,EAAM9D,OAAOF,MAAQ,EACtB,CACH,EAOMwE,EAAa,WACjBrB,EAAeD,EAAc,EAC/B,EAEMuB,EAAgB,SAACT,GACrB,IAAM3F,EAAMgF,IACR,CAACW,EAAMU,KAAMV,EAAMW,KAAKC,SAAS,cACnCZ,EAAM/E,iBACNgF,EAAkB,IAClBC,EAAWhB,EAAc,IACD,WAAfc,EAAMU,MACfV,EAAM/E,iBACNgF,EAAkB,KACM,cAAfD,EAAMU,MACfV,EAAM/E,iBACNiF,EAAWhB,EAAc,IACD,eAAfc,EAAMU,MAMRV,EAAMW,MAAQtG,EAAI6E,IALzBc,EAAM/E,iBACNiF,EAAWhB,EAAc,IAQV,aAAfc,EAAMU,MACS,UAAfV,EAAMU,MACS,YAAfV,EAAMU,MACS,cAAfV,EAAMU,MAENV,EAAM/E,gBAEV,EAEMiF,EAAa,SAACW,G,QACZ3B,EAAc4B,KAAKC,IAAID,KAAKE,IAAIvD,EAAY,EAAGoD,GAAQ,GAEzDzB,EAAUI,QAAQN,KACU,QAA9BX,EAAAa,EAAUI,QAAQN,UAAY,IAAAX,GAAAA,EAAEkB,QACF,QAA9BjB,EAAAY,EAAUI,QAAQN,UAAY,IAAAV,GAAAA,EAAEyC,SAChC9B,EAAeD,GAEnB,EAEMe,EAAoB,SAACjE,GACzB,IAAM3B,EAAMgF,IACZhF,EAAI6E,GAAelD,EAAM,GACzBuE,EAAgBlG,EAClB,EAEMkG,EAAkB,SAAClG,GACvB,IAAM6G,EAAW7G,EAAI8G,KAAK,IAC1BlF,EAASiF,EACX,EAEME,EAAc,SAACpB,G,MACnBA,EAAM/E,iBAEN,IAAMZ,EAAMgF,IACRgC,EAAkBnC,EAGhBoC,EAAatB,EAAMuB,cACtBC,QAAQ,cACR7E,MAAM,EAAGc,EAAYyB,GACrBK,MAAM,IAGT,IAAI3B,IAAc0D,EAAWjB,MAAK,SAACrE,GAAU,OAAA4D,MAAMC,OAAO7D,GAAb,IAA7C,CAKA,IAAK,IAAIyF,EAAM,EAAGA,EAAMhE,IAAagE,EAC/BA,GAAOvC,GAAeoC,EAAW5E,OAAS,IAC5CrC,EAAIoH,GAA6B,QAAtBlD,EAAA+C,EAAWI,eAAW,IAAAnD,EAAAA,EAAA,GACjC8C,KAIJnB,EAAWmB,GACXd,EAAgBlG,EAXf,CAYH,EAEA,OACE4E,EAAAA,cAAA,OACEf,MAAOyD,OAAOC,OAAO,CAAEC,QAAS,OAAQC,WAAY,UAAY1D,EAAcN,IAAmBA,GACjGzC,UAAqC,kBAAnByC,EAA8BA,OAAiBX,EACjEuB,QAASA,GAERqD,MAAMC,KAAK,CAAEtF,OAAQe,IAAa,SAACwE,EAAGpB,GAAU,OAAAA,CAAK,IAAEqB,KAAI,SAACrB,G,UAAU,OACrE5B,EAAAA,cAACA,EAAAA,SAAe,CAAA0B,IAAKE,GAClB9C,EACC,CACE/B,MAA2B,QAApBuC,EAAAc,IAAcwB,UAAM,IAAAtC,EAAAA,EAAI,GAC/BzC,YAA2C,QAA9B2C,EAAwB,QAAxBD,EAAAkB,WAAwB,IAAAlB,OAAA,EAAAA,EAAAqC,UAAM,IAAApC,EAAAA,OAAItB,EAC/CgF,IAAK,SAACC,GAAY,OAAChD,EAAUI,QAAQqB,GAASuB,CAAO,EACrDnG,SAAU8D,EACVsC,QAAS,SAACrC,GAAU,OAxGZ,SAACA,GAA8C,gBAACa,GAClE1B,EAAe0B,GACfb,EAAM9D,OAAO+E,Q,CACd,CAqG+BqB,CAAYtC,EAAZsC,CAAmBzB,EAAM,EAC7C0B,OAAQ/B,EACRgC,UAAW/B,EACX/B,QAAS0C,EACTqB,aAAc,MACd,aAAc,8BAAA1K,OAA8B8I,EAAQ,GACpD3C,MAAOyD,OAAOC,OACX7C,EAAuE,CAAC,EAAnD,CAAE2D,MAAO,MAAOC,UAAW,UACjDvE,EAAcP,GAAcA,EAAa,CAAC,GAE5CxC,UAAiC,kBAAfwC,EAA0BA,OAAaV,EACzDtB,KAAM2B,EACNoF,UAAWhF,EAAa,UAAY,OACpCiF,QAAS1C,GAEXU,GAEDA,EAAQpD,EAAY,IAAiC,oBAApBE,EAAiCA,EAAgBkD,GAASlD,G,IAKtG,C","sources":["ApiServices/adminHttpService.js","ApiServices/adminHttpServices/adminLoginHttpService.js","ApiServices/mainAdminHttpService.js","Components/Login/AuthforgotPass.jsx","../node_modules/src/index.tsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst errorCallBack = (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    //toast.error(\"an unexpected error occured\");\r\n  }\r\n  return Promise.reject(error);\r\n};\r\naxios.defaults.headers.common[\"x-auth-token-company\"] =\r\n  localStorage.getItem(\"token-company\");\r\naxios.interceptors.request.use(async (req) => {\r\n  req.headers[\"x-auth-token-company\"] = await localStorage.getItem(\"token-company\");\r\n  req.headers[\"x-auth-token-admin\"] = await localStorage.getItem(\"token-main-admin\"); \r\n  return req;\r\n});\r\n//intercept errors while communicating with backend server\r\naxios.interceptors.response.use(null, errorCallBack);\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};","import adminHttpService from \"../adminHttpService\";\r\nimport { toast } from \"react-toastify\";\r\nimport mainAdminHttpService from \"../mainAdminHttpService\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport async function adminLogin(formData) {\r\n  try {\r\n    const { data, headers } = await adminHttpService.post(\r\n      `${process.env.REACT_APP_APIENDPOINT}/api/company/login`,\r\n      formData\r\n    );\r\n\r\n    // console.log(\"login Data\", data);\r\n    if (!data?.error) {\r\n      localStorage.setItem(\"myot_admin_id\", data?.results?.employee?._id);\r\n      await localStorage.removeItem(\"token-company\");\r\n      await localStorage.setItem(\r\n        \"token-company\",\r\n        headers[\"x-auth-token-company\"]\r\n      );\r\n      await localStorage.setItem(\"user_id\", data?.results?.employee?._id);\r\n\r\n      return { data };\r\n    } else toast.error(data.message);\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\n\r\nexport async function forgotPassword(formData) {\r\n  try {\r\n    const { data } = await adminHttpService.put(\r\n      `${process.env.REACT_APP_APIENDPOINT}/api/company/forgotPassword`,\r\n      formData\r\n    );\r\n    console.log(data);\r\n\r\n    if (!data.error) {\r\n      await localStorage.removeItem(\"token-admin\");\r\n    } else toast.error(data.message);\r\n\r\n    if (!data.error) return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\nexport async function verifyOTP(formData) {\r\n  try {\r\n    const { data } = await adminHttpService.put(\r\n      `${process.env.REACT_APP_APIENDPOINT}/api/company/verifyOTP`,\r\n      formData\r\n    );\r\n    console.log(data);\r\n    if (!data.error) {\r\n      toast.success(data.message);\r\n    } else toast.error(data.message);\r\n\r\n    if (!data.error) return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\nexport async function UpdateNewPassword(formData) {\r\n  try {\r\n    const { data } = await adminHttpService.put(\r\n      `${process.env.REACT_APP_APIENDPOINT}/api/company/updatePassword`,\r\n      formData\r\n    );\r\n    console.log(data);\r\n    if (!data.error) {\r\n      toast.success(data.message);\r\n    } else toast.error(data.message);\r\n\r\n    if (!data.error) return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\nexport async function updatePassword(formData) {\r\n  try {\r\n    const { data } = await adminHttpService.post(\r\n      `${process.env.REACT_APP_APIENDPOINT}/admin/updatePassword`,\r\n      formData\r\n    );\r\n    console.log(data);\r\n    if (!data.error) {\r\n      toast.success(data.message);\r\n    } else toast.error(data.message);\r\n\r\n    return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\nexport async function getDashboardCount() {\r\n  try {\r\n    const { data } = await adminHttpService.get(\r\n      `${process.env.REACT_APP_APIENDPOINT}/admin/getDashboardCount`\r\n    );\r\n    console.log(data);\r\n\r\n    return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\nexport async function getNotificationList() {\r\n  try {\r\n    const { data } = await adminHttpService.get(\r\n      `${process.env.REACT_APP_APIENDPOINT}/admin/getNotificationList`\r\n    );\r\n    console.log(data);\r\n\r\n    return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\n\r\nexport async function changePassword(formData) {\r\n  try {\r\n    const { data } = await adminHttpService.post(\r\n      `${process.env.REACT_APP_APIENDPOINT}/admin/changePassword`,\r\n      formData\r\n    );\r\n    console.log(data);\r\n    if (!data.error) {\r\n      toast.success(data.message);\r\n    } else toast.error(data.message);\r\n\r\n    return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\n\r\nexport async function updateProfile(formData) {\r\n  try {\r\n    const { data } = await adminHttpService.post(\r\n      `${process.env.REACT_APP_APIENDPOINT}/admin/updateProfile`,\r\n      formData\r\n    );\r\n    console.log(data);\r\n    if (!data.error) {\r\n      toast.success(data.message);\r\n    } else toast.error(data.message);\r\n\r\n    return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\nconst masteHook = async (url, formData) => {\r\n  try {\r\n    const { data } = await adminHttpService.post(\r\n      `${process.env.REACT_APP_APIENDPOINT}/${url}`,\r\n      formData\r\n    );\r\n    console.log(data);\r\n    if (!data.error) {\r\n      toast.success(data.message);\r\n    } else toast.error(data.message);\r\n\r\n    return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport async function getAdminData() {\r\n  try {\r\n    const { data } = await adminHttpService.get(\r\n      `${process.env.REACT_APP_APIENDPOINT}/admin/getAdminData`\r\n    );\r\n    console.log(data);\r\n\r\n    return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\n\r\nexport async function contactUs(formData) {\r\n  try {\r\n    const { data } = await adminHttpService.post(\r\n      `${process.env.REACT_APP_APIENDPOINT}/admin/contactUs`,\r\n      formData\r\n    );\r\n    console.log(data);\r\n    if (!data.error) {\r\n      toast.success(data.message);\r\n    } else toast.error(data.message);\r\n\r\n    return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\n\r\nexport async function adminSignUp(formData) {\r\n  try {\r\n    const { data } = await adminHttpService.post(\r\n      `${process.env.REACT_APP_APIENDPOINT}/api/company/signup  `,\r\n      formData\r\n    );\r\n\r\n    if (!data?.error) {\r\n      return { data };\r\n    } else\r\n      Swal.fire({\r\n        toast: true,\r\n        icon: \"error\",\r\n        position: \"top-end\",\r\n        title: data?.message,\r\n        showConfirmButton: false,\r\n        timerProgressBar: true,\r\n        timer: 3000,\r\n      });\r\n\r\n    return { data };\r\n  } catch (error) {\r\n    if (error.response)\r\n      Swal.fire({\r\n        toast: true,\r\n        icon: \"error\",\r\n        position: \"top-end\",\r\n        title: error.response.data.message,\r\n        showConfirmButton: false,\r\n        timerProgressBar: true,\r\n        timer: 3000,\r\n      });\r\n    return { error };\r\n  }\r\n}\r\n\r\nexport async function mainAdminLogin(formData) {\r\n  try {\r\n    const { data, headers } = await mainAdminHttpService.post(\r\n      `${process.env.REACT_APP_APIENDPOINT}/api/admin/login`,\r\n\r\n      formData\r\n    );\r\n\r\n    console.log(\"login Data\", data);\r\n    if (!data.error) {\r\n      await localStorage.removeItem(\"token-main-admin\");\r\n      await localStorage.setItem(\r\n        \"token-main-admin\",\r\n        headers[\"x-auth-token-admin\"]\r\n      );\r\n\r\n      return { data };\r\n    } else toast.error(data.message);\r\n\r\n    return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\n\r\nexport async function mainForgotPassword(formData) {\r\n  try {\r\n    const { data } = await mainAdminHttpService.post(\r\n      `${process.env.REACT_APP_APIENDPOINT}/api/admin/forgotPassword`,\r\n      formData\r\n    );\r\n    console.log(data);\r\n\r\n    if (!data.error) {\r\n      await localStorage.removeItem(\"token-main-admin\");\r\n    } else toast.error(data.message);\r\n\r\n    if (!data.error) return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\nexport async function mainVerifyOTP(formData) {\r\n  try {\r\n    const { data } = await mainAdminHttpService.post(\r\n      `${process.env.REACT_APP_APIENDPOINT}/api/admin/verifyOTP`,\r\n      formData\r\n    );\r\n    console.log(data);\r\n    if (!data.error) {\r\n    } else toast.error(data.message);\r\n\r\n    if (!data.error) return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\nexport async function mainUpdateNewPassword(formData) {\r\n  try {\r\n    const { data } = await mainAdminHttpService.post(\r\n      `${process.env.REACT_APP_APIENDPOINT}/api/admin/updatePassword`,\r\n      formData\r\n    );\r\n    console.log(data);\r\n    if (!data.error) {\r\n    } else toast.error(data.message);\r\n\r\n    if (!data.error) return { data };\r\n  } catch (error) {\r\n    if (error.response) toast.error(error.response.data.message);\r\n    return { error };\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst errorCallBack = (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    //toast.error(\"an unexpected error occured\");\r\n  }\r\n  return Promise.reject(error);\r\n};\r\naxios.defaults.headers.common[\"x-auth-token-admin\"] =\r\n  localStorage.getItem(\"token-main-admin\");\r\naxios.interceptors.request.use(async (req) => {\r\n  req.headers[\"x-auth-token-admin\"] = await localStorage.getItem(\r\n    \"token-main-admin\"\r\n  );\r\n  return req;\r\n});\r\n//intercept errors while communicating with backend server\r\naxios.interceptors.response.use(null, errorCallBack);\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport {\r\n  forgotPassword,\r\n  verifyOTP,\r\n} from \"../../ApiServices/adminHttpServices/adminLoginHttpService\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"rsuite\";\r\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst AuthforgotPass = () => {\r\n  const [formToShow, setFormToShow] = useState(\"EmailForm\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [counter, setCounter] = useState(0);\r\n  const [loader, setLoader] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\r\n  }, [counter]);\r\n\r\n  const onSubmitEmail = async (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n    try {\r\n      let { data } = await forgotPassword({ email });\r\n      console.log(data);\r\n      if (data && !data?.error) {\r\n        setLoader(false);\r\n        toast.success(\"OTP sent successfully\");\r\n        setFormToShow(\"OTPform\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  const handleOTPsubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoader(true);\r\n    // console.log(email, otp);\r\n    if (otp.length < 4) {\r\n      toast.error(\"OTP must be 4 digits\", {\r\n        position: \"top-right\",\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n        theme: \"light\",\r\n      });\r\n      setLoader(false);\r\n      return false;\r\n    }\r\n    try {\r\n      let { data } = await verifyOTP({ email, otp });\r\n      if (data && !data?.error) {\r\n        setLoader(false);\r\n        // toast.success(\"OTP verified successfully\");\r\n        navigate(\"/Update-password\", { state: { email } });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoader(false);\r\n    }\r\n  };\r\n\r\n  const ResendOtp = async (e) => {\r\n    onSubmitEmail(e);\r\n    setCounter(60);\r\n    e.preventDefault();\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"page-wrapper\"\r\n        id=\"main-wrapper\"\r\n        data-layout=\"vertical\"\r\n        data-sidebartype=\"full\"\r\n        data-sidebar-position=\"fixed\"\r\n        data-header-position=\"fixed\"\r\n      >\r\n        <div>\r\n          <div>\r\n            <div className=\"\">\r\n              <div className=\"\">\r\n                <div className=\"reset-pass-body\">\r\n                  <div className=\"card-forgot\">\r\n                    {/* <img\r\n                      style={{\r\n                        width: \"100px\",\r\n                        height: \"100px\",\r\n                        objectFit: \"cover\",\r\n                      }}\r\n                      src=\"/images/Myot-logo.png\"\r\n                      alt=\"\"\r\n                    /> */}\r\n                    <img src=\"/images/Ellipse-forgot-pass.png\" alt=\"\" />\r\n                    {formToShow === \"EmailForm\" ? (\r\n                      <>\r\n                        <div className=\"\">\r\n                          <h2 className=\" mb-3 d-flex justify-content-center recover-text\">\r\n                            Recover\r\n                          </h2>\r\n                          <p className=\"reset-pass-desc\">\r\n                            No worries, we’ll send you reset instructions.\r\n                          </p>\r\n                        </div>\r\n                        <form>\r\n                          <div className=\"mb-3 input_icon_container\">\r\n                            <div\r\n                              className={\r\n                                !email\r\n                                  ? \"text-danger input_icons\"\r\n                                  : \"input_icons\"\r\n                              }\r\n                            >\r\n                              <FontAwesomeIcon icon={faEnvelope} />\r\n                            </div>\r\n                            <label\r\n                              htmlFor=\"exampleInputEmail1\"\r\n                              className=\"form-label\"\r\n                            >\r\n                              Email address\r\n                            </label>\r\n                            <input\r\n                              type=\"email\"\r\n                              placeholder=\"Enter your email address\"\r\n                              className=\"form-control w-100\"\r\n                              required\r\n                              value={email}\r\n                              onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                          </div>\r\n                          <Button\r\n                            loading={loader}\r\n                            appearance=\"primary\"\r\n                            className=\"btn py-8 mb-3 form-reset\"\r\n                            type=\"submit\"\r\n                            onClick={(e) => onSubmitEmail(e)}\r\n                            disabled={!email}\r\n                          >\r\n                            Submit\r\n                          </Button>\r\n                        </form>\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <div className=\"\">\r\n                          <h2 className=\" mb-3 d-flex justify-content-center recover-text\">\r\n                            OTP Verification\r\n                          </h2>\r\n                          <p className=\"reset-pass-desc\">\r\n                            Enter OTP Code sent to {email.substring(0, 3)}\r\n                            {\"*\".repeat(email.length - 6)}\r\n                            {email.slice(-3)}\r\n                          </p>\r\n                        </div>\r\n                        <form onSubmit={(e) => handleOTPsubmit(e)}>\r\n                          <div className=\"otp-input-box\">\r\n                            <OtpInput\r\n                              inputType=\"tel\"\r\n                              value={otp}\r\n                              onChange={setOtp}\r\n                              numInputs={4}\r\n                              onChangeRegex={/^([0-9]{0,})$/}\r\n                              renderSeparator={\r\n                                <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                              }\r\n                              isInputNum\r\n                              inputStyle=\"otp-field__input\"\r\n                              containerStyle=\"form-group\"\r\n                              renderInput={(props) => <input {...props} />}\r\n                            />\r\n                          </div>\r\n                          <Button\r\n                            loading={loader}\r\n                            appearance=\"primary\"\r\n                            className=\"btn py-8 my-3 form-reset\"\r\n                            type=\"submit\"\r\n                            disabled={otp.length !== 4}\r\n                          >\r\n                            Verify OTP\r\n                          </Button>\r\n                        </form>\r\n                        {/* <div className=\"form-group col-12 text-center\">\r\n                          {counter ? (\r\n                            <span className=\"count_Sec\"> 00:{counter}</span>\r\n                          ) : null}\r\n                        </div> */}\r\n                        <p>\r\n                          Don’t received OTP code?{\" \"}\r\n                          {counter ? (\r\n                            <span className=\"count_Sec\">\r\n                              Resend after 00:{counter}\r\n                            </span>\r\n                          ) : (\r\n                            <span\r\n                              className=\"otp-sec mx-1 text-primary\"\r\n                              id=\"resendOTP\"\r\n                              onClick={(e) => ResendOtp(e)}\r\n                              style={{ cursor: \"pointer\" }}\r\n                            >\r\n                              <b>Request again</b>\r\n                            </span>\r\n                          )}\r\n                        </p>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                  {/* <form onSubmit={handleOTPsubmit(onSubmitEmail)}>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-12 d-flex pe-0 mb-4 mt-4\">\r\n                        <div className=\"col-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"\"\r\n                            placeholder=\"5\"\r\n                            id=\"\"\r\n                            className=\"otp-input\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"\"\r\n                            placeholder=\"\"\r\n                            id=\"\"\r\n                            className=\"otp-input\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"\"\r\n                            placeholder=\"\"\r\n                            id=\"\"\r\n                            className=\"otp-input\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"\"\r\n                            placeholder=\"\"\r\n                            id=\"\"\r\n                            className=\"otp-input\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"\"\r\n                            placeholder=\"\"\r\n                            id=\"\"\r\n                            className=\"otp-input\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                          <input\r\n                            type=\"text\"\r\n                            name=\"\"\r\n                            placeholder=\"\"\r\n                            id=\"\"\r\n                            className=\"otp-input\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <Link to={\"/Admin/Reset-password\"}>\r\n                    <button\r\n                      className=\"btn  py-8 mb-3 form-reset\"\r\n                      type='submit'\r\n                    >\r\n                      Reset Your Password\r\n                    </button>\r\n\r\n                    <Link to={\"/Admin/Forgot-success\"}>\r\n                      <button\r\n                        className=\"btn  py-8 mb-3 form-reset\"\r\n                        type=\"submit\"\r\n                      >\r\n                        Reset Your Password\r\n                      </button>\r\n\r\n                    </Link>\r\n                    <div className=\"d-flex justify-content-center mt-2\">\r\n                      <p className=\"not-recive-otp me-1\">\r\n                        Don’t received OTP code?\r\n                      </p>\r\n                      <p className=\"resend-otp\">Resend Code</p>\r\n                    </div>\r\n                  </form> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthforgotPass;\r\n","import React from 'react';\n\ntype AllowedInputTypes = 'password' | 'text' | 'number' | 'tel';\n\ntype InputProps = Required<\n  Pick<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    | 'value'\n    | 'onChange'\n    | 'onFocus'\n    | 'onBlur'\n    | 'onKeyDown'\n    | 'onPaste'\n    | 'aria-label'\n    | 'autoComplete'\n    | 'style'\n    | 'inputMode'\n    | 'onInput'\n  > & {\n    ref: React.RefCallback<HTMLInputElement>;\n    placeholder: string | undefined;\n    className: string | undefined;\n    type: AllowedInputTypes;\n  }\n>;\n\ninterface OTPInputProps {\n  /** Value of the OTP input */\n  value?: string;\n  /** Number of OTP inputs to be rendered */\n  numInputs?: number;\n  /** Callback to be called when the OTP value changes */\n  onChange: (otp: string) => void;\n  /** Callback to be called when pasting content into the component */\n  onPaste?: (event: React.ClipboardEvent<HTMLDivElement>) => void;\n  /** Function to render the input */\n  renderInput: (inputProps: InputProps, index: number) => React.ReactNode;\n  /** Whether the first input should be auto focused */\n  shouldAutoFocus?: boolean;\n  /** Placeholder for the inputs */\n  placeholder?: string;\n  /** Function to render the separator */\n  renderSeparator?: ((index: number) => React.ReactNode) | React.ReactNode;\n  /** Style for the container */\n  containerStyle?: React.CSSProperties | string;\n  /** Style for the input */\n  inputStyle?: React.CSSProperties | string;\n  /** The type that will be passed to the input being rendered */\n  inputType?: AllowedInputTypes;\n  /** Do not apply the default styles to the inputs, will be removed in future versions */\n  skipDefaultStyles?: boolean; // TODO: Remove in next major release\n}\n\nconst isStyleObject = (obj: unknown) => typeof obj === 'object' && obj !== null;\n\nconst OTPInput = ({\n  value = '',\n  numInputs = 4,\n  onChange,\n  onPaste,\n  renderInput,\n  shouldAutoFocus = false,\n  inputType = 'text',\n  renderSeparator,\n  placeholder,\n  containerStyle,\n  inputStyle,\n  skipDefaultStyles = false,\n}: OTPInputProps) => {\n  const [activeInput, setActiveInput] = React.useState(0);\n  const inputRefs = React.useRef<Array<HTMLInputElement | null>>([]);\n\n  const getOTPValue = () => (value ? value.toString().split('') : []);\n\n  const isInputNum = inputType === 'number' || inputType === 'tel';\n\n  React.useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, numInputs);\n  }, [numInputs]);\n\n  React.useEffect(() => {\n    if (shouldAutoFocus) {\n      inputRefs.current[0]?.focus();\n    }\n  }, [shouldAutoFocus]);\n\n  const getPlaceholderValue = () => {\n    if (typeof placeholder === 'string') {\n      if (placeholder.length === numInputs) {\n        return placeholder;\n      }\n\n      if (placeholder.length > 0) {\n        console.error('Length of the placeholder should be equal to the number of inputs.');\n      }\n    }\n    return undefined;\n  };\n\n  const isInputValueValid = (value: string) => {\n    const isTypeValid = isInputNum ? !isNaN(Number(value)) : typeof value === 'string';\n    return isTypeValid && value.trim().length === 1;\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (isInputValueValid(value)) {\n      changeCodeAtFocus(value);\n      focusInput(activeInput + 1);\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { nativeEvent } = event;\n    const value = event.target.value;\n\n    if (!isInputValueValid(value)) {\n      // Pasting from the native autofill suggestion on a mobile device can pass\n      // the pasted string as one long input to one of the cells. This ensures\n      // that we handle the full input and not just the first character.\n      if (value.length === numInputs) {\n        const hasInvalidInput = value.split('').some((cellInput) => !isInputValueValid(cellInput));\n        if (!hasInvalidInput) {\n          handleOTPChange(value.split(''));\n          focusInput(numInputs - 1);\n        }\n      }\n\n      // @ts-expect-error - This was added previously to handle and edge case\n      // for dealing with keyCode \"229 Unidentified\" on Android. Check if this is\n      // still needed.\n      if (nativeEvent.data === null && nativeEvent.inputType === 'deleteContentBackward') {\n        event.preventDefault();\n        changeCodeAtFocus('');\n        focusInput(activeInput - 1);\n      }\n\n      // Clear the input if it's not valid value because firefox allows\n      // pasting non-numeric characters in a number type input\n      event.target.value = '';\n    }\n  };\n\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => (index: number) => {\n    setActiveInput(index);\n    event.target.select();\n  };\n\n  const handleBlur = () => {\n    setActiveInput(activeInput - 1);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const otp = getOTPValue();\n    if ([event.code, event.key].includes('Backspace')) {\n      event.preventDefault();\n      changeCodeAtFocus('');\n      focusInput(activeInput - 1);\n    } else if (event.code === 'Delete') {\n      event.preventDefault();\n      changeCodeAtFocus('');\n    } else if (event.code === 'ArrowLeft') {\n      event.preventDefault();\n      focusInput(activeInput - 1);\n    } else if (event.code === 'ArrowRight') {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    }\n    // React does not trigger onChange when the same value is entered\n    // again. So we need to focus the next input manually in this case.\n    else if (event.key === otp[activeInput]) {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    } else if (\n      event.code === 'Spacebar' ||\n      event.code === 'Space' ||\n      event.code === 'ArrowUp' ||\n      event.code === 'ArrowDown'\n    ) {\n      event.preventDefault();\n    }\n  };\n\n  const focusInput = (index: number) => {\n    const activeInput = Math.max(Math.min(numInputs - 1, index), 0);\n\n    if (inputRefs.current[activeInput]) {\n      inputRefs.current[activeInput]?.focus();\n      inputRefs.current[activeInput]?.select();\n      setActiveInput(activeInput);\n    }\n  };\n\n  const changeCodeAtFocus = (value: string) => {\n    const otp = getOTPValue();\n    otp[activeInput] = value[0];\n    handleOTPChange(otp);\n  };\n\n  const handleOTPChange = (otp: Array<string>) => {\n    const otpValue = otp.join('');\n    onChange(otpValue);\n  };\n\n  const handlePaste = (event: React.ClipboardEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    const otp = getOTPValue();\n    let nextActiveInput = activeInput;\n\n    // Get pastedData in an array of max size (num of inputs - current position)\n    const pastedData = event.clipboardData\n      .getData('text/plain')\n      .slice(0, numInputs - activeInput)\n      .split('');\n\n    // Prevent pasting if the clipboard data contains non-numeric values for number inputs\n    if (isInputNum && pastedData.some((value) => isNaN(Number(value)))) {\n      return;\n    }\n\n    // Paste data from focused input onwards\n    for (let pos = 0; pos < numInputs; ++pos) {\n      if (pos >= activeInput && pastedData.length > 0) {\n        otp[pos] = pastedData.shift() ?? '';\n        nextActiveInput++;\n      }\n    }\n\n    focusInput(nextActiveInput);\n    handleOTPChange(otp);\n  };\n\n  return (\n    <div\n      style={Object.assign({ display: 'flex', alignItems: 'center' }, isStyleObject(containerStyle) && containerStyle)}\n      className={typeof containerStyle === 'string' ? containerStyle : undefined}\n      onPaste={onPaste}\n    >\n      {Array.from({ length: numInputs }, (_, index) => index).map((index) => (\n        <React.Fragment key={index}>\n          {renderInput(\n            {\n              value: getOTPValue()[index] ?? '',\n              placeholder: getPlaceholderValue()?.[index] ?? undefined,\n              ref: (element) => (inputRefs.current[index] = element),\n              onChange: handleChange,\n              onFocus: (event) => handleFocus(event)(index),\n              onBlur: handleBlur,\n              onKeyDown: handleKeyDown,\n              onPaste: handlePaste,\n              autoComplete: 'off',\n              'aria-label': `Please enter OTP character ${index + 1}`,\n              style: Object.assign(\n                !skipDefaultStyles ? ({ width: '1em', textAlign: 'center' } as const) : {},\n                isStyleObject(inputStyle) ? inputStyle : {}\n              ),\n              className: typeof inputStyle === 'string' ? inputStyle : undefined,\n              type: inputType,\n              inputMode: isInputNum ? 'numeric' : 'text',\n              onInput: handleInputChange,\n            },\n            index\n          )}\n          {index < numInputs - 1 && (typeof renderSeparator === 'function' ? renderSeparator(index) : renderSeparator)}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport type { OTPInputProps, InputProps, AllowedInputTypes };\nexport default OTPInput;\n"],"names":["axios","defaults","headers","common","localStorage","getItem","interceptors","request","use","async","req","response","error","status","Promise","reject","get","post","put","delete","adminLogin","formData","data","adminHttpService","concat","process","_data$results","_data$results$employe","_data$results2","_data$results2$employ","setItem","results","employee","_id","removeItem","toast","message","forgotPassword","console","log","verifyOTP","success","UpdateNewPassword","adminSignUp","Swal","icon","position","title","showConfirmButton","timerProgressBar","timer","mainAdminLogin","mainAdminHttpService","mainForgotPassword","mainVerifyOTP","mainUpdateNewPassword","AuthforgotPass","formToShow","setFormToShow","useState","email","setEmail","otp","setOtp","counter","setCounter","loader","setLoader","navigate","useNavigate","useEffect","setTimeout","onSubmitEmail","e","preventDefault","_jsx","_Fragment","children","className","id","_jsxs","src","alt","FontAwesomeIcon","faEnvelope","htmlFor","type","placeholder","required","value","onChange","target","Button","loading","appearance","onClick","disabled","substring","repeat","length","slice","onSubmit","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","state","handleOTPsubmit","OtpInput","inputType","numInputs","onChangeRegex","renderSeparator","isInputNum","inputStyle","containerStyle","renderInput","props","ResendOtp","style","cursor","isStyleObject","obj","OTPInput","_a","_b","_c","onPaste","_d","shouldAutoFocus","_e","_f","skipDefaultStyles","_g","React","activeInput","setActiveInput","inputRefs","getOTPValue","toString","split","current","focus","getPlaceholderValue","isInputValueValid","isNaN","Number","trim","handleChange","event","changeCodeAtFocus","focusInput","handleInputChange","nativeEvent","some","cellInput","handleOTPChange","handleBlur","handleKeyDown","code","key","includes","index","Math","max","min","select","otpValue","join","handlePaste","nextActiveInput","pastedData","clipboardData","getData","pos","shift","Object","assign","display","alignItems","Array","from","_","map","ref","element","onFocus","handleFocus","onBlur","onKeyDown","autoComplete","width","textAlign","inputMode","onInput"],"sourceRoot":""}